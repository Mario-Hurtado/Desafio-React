{"version":3,"sources":["components/HeroCard.jsx","components/Search.jsx","App.js","index.js"],"names":["HeroCard","props","heroes","setHeroes","cardStyle","boxShadow","React","publicKey","ts","axios","get","params","apikey","hash","md5","then","response","data","results","searchHeroComicLink","heroUrls","type","url","searchHeroDetail","Container","fixed","Grid","container","spacing","map","hero","item","xs","sm","md","Card","style","sx","maxWidth","CardActionArea","CardMedia","component","height","image","thumbnail","path","extension","alt","name","CardContent","Typography","fontWeight","fontFamily","gutterBottom","variant","textAlign","fontSize","color","description","textColor","comics","available","series","stories","CardActions","Button","size","href","urls","filter","target","btnStyles","marginLeft","backgroundColor","Search","useState","heroName","setHeroName","emptySearch","filterByHeroName","TextField","id","label","onChange","event","newHeroName","value","onClick","heroesTemp","handleClick","startIcon","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2addfe0a.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Button, CardActionArea, CardActions } from \"@mui/material\";\r\nimport { Grid, Container } from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport md5 from \"md5\";\r\n\r\nconst HeroCard = (props) => {\r\n  let heroes = [...props.heroes];\r\n  let { setHeroes } = props;\r\n\r\n  const cardStyle = {\r\n    boxShadow: \"5px 10px #ff452b\",\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const baseURL = \"https://gateway.marvel.com:443/v1/public/characters\";\r\n    const publicKey = \"d3117b862aa475e233f64f8d0198832b\";\r\n    const privateKey = \"5d9c47f0d9b15b2bdc7f509f290056d784e55966\";\r\n    const ts = \"peticion\";\r\n    const string = ts + privateKey + publicKey;\r\n    axios\r\n      .get(baseURL, {\r\n        params: {\r\n          ts: ts,\r\n          apikey: publicKey,\r\n          hash: md5(string),\r\n        },\r\n      })\r\n      .then((response) => setHeroes(response.data.data.results));\r\n  }, [setHeroes]);\r\n\r\n  const altDescription =\r\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut bibendum felis nec dui ultrices, vel congue orci interdum. Pellentesque nunc nisi, egestas eu sagittis maximus, venenatis ac est. Nullam sed dignissim nisi. In eu mi non velit laoreet tristique. Cras varius felis facilisis, aliquet orci vitae, egestas quam. Interdum et malesuada fames ac ante ipsum primis in faucibus. Cras et nisi sollicitudin, luctus dui nec, laoreet nisl.\";\r\n\r\n  const searchHeroComicLink = (heroUrls) => {\r\n    if (heroUrls.type === \"comiclink\") {\r\n      return heroUrls.url;\r\n    }\r\n  };\r\n\r\n  const searchHeroDetail = (heroUrls) => {\r\n    if (heroUrls.type === \"detail\") {\r\n      return heroUrls.url;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container fixed>\r\n      <Grid container spacing={3}>\r\n        {heroes.map((hero) => (\r\n          <Grid item xs={12} sm={4} md={3} key={hero.name}>\r\n            <Card style={cardStyle} sx={{ maxWidth: 345 }}>\r\n              <CardActionArea>\r\n                <CardMedia\r\n                  component=\"img\"\r\n                  height=\"320\"\r\n                  image={hero.thumbnail.path + \".\" + hero.thumbnail.extension}\r\n                  alt={hero.name + \" image\"}\r\n                />\r\n                <CardContent>\r\n                  <Typography\r\n                    style={{ fontWeight: \"bold\", fontFamily: \"Nunito Sans\" }}\r\n                    gutterBottom\r\n                    variant=\"h5\"\r\n                    component=\"div\"\r\n                  >\r\n                    {hero.name}\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    style={{\r\n                      textAlign: \"justify\",\r\n                      fontFamily: \"Nunito Sans\",\r\n                      fontSize: \"16px\",\r\n                    }}\r\n                    color=\"text.secondary\"\r\n                  >\r\n                    {hero.description === \"\"\r\n                      ? altDescription\r\n                      : hero.description}\r\n                  </Typography>\r\n                  <ul\r\n                    style={{\r\n                      textAlign: \"left\",\r\n                      fontFamily: \"Nunito Sans\",\r\n                      fontSize: \"16px\",\r\n                    }}\r\n                  >\r\n                    <li style={{ textColor: \"dark-grey\" }}>\r\n                      Number of comics: {hero.comics.available}\r\n                    </li>\r\n                    <li>Number of series: {hero.series.available}</li>\r\n                    <li>Number of stories: {hero.stories.available}</li>\r\n                  </ul>\r\n                </CardContent>\r\n              </CardActionArea>\r\n              <CardActions>\r\n                <Button\r\n                  size=\"small\"\r\n                  href={hero.urls.filter(searchHeroComicLink)[0].url}\r\n                  style={{ color: \"#ff452b\", fontFamily: \"Nunito Sans\" }}\r\n                  target=\"_blank\"\r\n                >\r\n                  See comic info\r\n                </Button>\r\n                <Button\r\n                  size=\"small\"\r\n                  style={{ color: \"#ff452b\", fontFamily: \"Nunito Sans\" }}\r\n                  href={hero.urls.filter(searchHeroDetail)[0].url}\r\n                  target=\"_blank\"\r\n                >\r\n                  Learn More\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default HeroCard;\r\n","import TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { useState } from \"react\";\r\n\r\nconst btnStyles = {\r\n  marginLeft: \"10px\",\r\n  fontFamily: \"Nunito Sans\",\r\n  backgroundColor: \"#ff452b\",\r\n  height: \"55px\",\r\n};\r\n\r\nconst Search = (props) => {\r\n  const [heroName, setHeroName] = useState(\"\");\r\n\r\n  let heroes = [...props.heroes];\r\n  let { setHeroes } = props;\r\n\r\n  const emptySearch = [\r\n    {\r\n      name: \"Error while connecting with API. Please try again later\",\r\n      description: \"Try again later\",\r\n      thumbnail: {\r\n        path: \"https://blogs.unsw.edu.au/nowideas/files/2018/11/error-no-es-fracaso\",\r\n        extension: \"jpg\",\r\n      },\r\n      urls: [\r\n        {\r\n          type: \"detail\",\r\n          url: \"https://blogs.unsw.edu.au/nowideas/files/2018/11/error-no-es-fracaso.jpg\",\r\n        },\r\n        {\r\n          type: \"comiclink\",\r\n          url: \"https://blogs.unsw.edu.au/nowideas/files/2018/11/error-no-es-fracaso.jpg\",\r\n        },\r\n      ],\r\n      comics: {\r\n        available: 0,\r\n      },\r\n      series: {\r\n        available: 0,\r\n      },\r\n      stories: {\r\n        available: 0,\r\n      },\r\n    },\r\n  ];\r\n\r\n  const handleChange = (event) => {\r\n    const newHeroName = event.target.value;\r\n    setHeroName(newHeroName);\r\n  };\r\n\r\n  const filterByHeroName = (hero) => {\r\n    return hero.name === heroName;\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (heroName === \"\") {\r\n      setHeroes(emptySearch);\r\n    } else {\r\n      let heroesTemp = heroes.filter(filterByHeroName);\r\n      setHeroes(heroesTemp);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TextField\r\n        id=\"filled-search\"\r\n        label=\"Search hero by name\"\r\n        type=\"search\"\r\n        style={{ fontFamily: \"Nunito Sans\" }}\r\n        variant=\"filled\"\r\n        onChange={handleChange}\r\n      />\r\n\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={() => {\r\n          handleClick();\r\n        }}\r\n        style={btnStyles}\r\n        startIcon={<SearchIcon />}\r\n      >\r\n        Search\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import \"./App.css\";\nimport HeroCard from \"./components/HeroCard\";\nimport Search from \"./components/Search\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [heroes, setHeroes] = useState([]);\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\"> MARVEL HEROES </h1>\n      <Search heroes={heroes} setHeroes={setHeroes} />\n      <br />\n      <HeroCard heroes={heroes} setHeroes={setHeroes} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}