{"version":3,"sources":["components/HeroCard.jsx","components/Search.jsx","App.js","index.js"],"names":["HeroCard","props","heroes","setHeroes","cardStyle","boxShadow","height","React","publicKey","ts","axios","get","params","apikey","hash","md5","then","response","data","results","searchHeroComicLink","heroUrls","type","url","searchHeroDetail","Container","fixed","Grid","container","spacing","map","hero","item","xs","sm","md","Card","style","sx","maxWidth","CardActionArea","CardMedia","component","image","thumbnail","path","extension","alt","name","CardContent","Typography","fontWeight","fontFamily","gutterBottom","variant","textAlign","fontSize","color","description","textColor","comics","available","series","stories","CardActions","Button","size","href","urls","filter","target","btnStyles","marginLeft","backgroundColor","marginTop","Search","useState","heroName","setHeroName","option","setOption","emptySearch","filterByHeroName","TextField","id","label","onChange","event","newHeroName","value","onClick","heroesTemp","handleClick","startIcon","FormControl","InputLabel","Select","labelId","width","element","MenuItem","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82bc4d7d.chunk.js","sourcesContent":["import * as React from \"react\";\r\n// Material UI imports\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Button, CardActionArea, CardActions } from \"@mui/material\";\r\nimport { Grid, Container } from \"@mui/material\";\r\n// Axios is imported for the HTTP request\r\nimport axios from \"axios\";\r\n// MD5 dependency to get the hashed string required as a parameter to fetch the info\r\nimport md5 from \"md5\";\r\n\r\nconst HeroCard = (props) => {\r\n  let heroes = [...props.heroes];\r\n  let { setHeroes } = props;\r\n\r\n  const cardStyle = {\r\n    boxShadow: \"5px 10px #ff452b\",\r\n    height: \"910px\",\r\n  };\r\n\r\n  // Effect hook is used to make the request to the Marvel API\r\n  React.useEffect(() => {\r\n    const baseURL = \"https://gateway.marvel.com:443/v1/public/characters\";\r\n    const publicKey = \"d3117b862aa475e233f64f8d0198832b\";\r\n    const privateKey = \"5d9c47f0d9b15b2bdc7f509f290056d784e55966\";\r\n    const ts = \"peticion\";\r\n    const string = ts + privateKey + publicKey;\r\n    axios\r\n      .get(baseURL, {\r\n        params: {\r\n          ts: ts,\r\n          apikey: publicKey,\r\n          hash: md5(string),\r\n        },\r\n      })\r\n      .then((response) => setHeroes(response.data.data.results));\r\n  }, [setHeroes]);\r\n\r\n  // Alternate description to display for the heroes who have an empty string as their description\r\n  const altDescription =\r\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut bibendum felis nec dui ultrices, vel congue orci interdum. Pellentesque nunc nisi, egestas eu sagittis maximus, venenatis ac est. Nullam sed dignissim nisi. In eu mi non velit laoreet tristique. Cras varius felis facilisis, aliquet orci vitae, egestas quam. Interdum et malesuada fames ac ante ipsum primis in faucibus. Cras et nisi sollicitudin, luctus dui nec, laoreet nisl.\";\r\n\r\n  // Function to obtain the URL to the hero's comics\r\n  const searchHeroComicLink = (heroUrls) => {\r\n    if (heroUrls.type === \"comiclink\") {\r\n      return heroUrls.url;\r\n    }\r\n  };\r\n\r\n  // Function to obtain the URL to the hero's detail\r\n  const searchHeroDetail = (heroUrls) => {\r\n    if (heroUrls.type === \"detail\") {\r\n      return heroUrls.url;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container fixed>\r\n      <Grid container spacing={3}>\r\n        {heroes.map((hero) => (\r\n          // These attributes allow the page to be responsive\r\n          <Grid item xs={12} sm={4} md={3} key={hero.name}>\r\n            <Card style={cardStyle} sx={{ maxWidth: 345 }}>\r\n              <CardActionArea>\r\n                <CardMedia\r\n                  component=\"img\"\r\n                  height=\"320\"\r\n                  image={hero.thumbnail.path + \".\" + hero.thumbnail.extension}\r\n                  alt={hero.name + \" image\"}\r\n                />\r\n                <CardContent>\r\n                  <Typography\r\n                    style={{ fontWeight: \"bold\", fontFamily: \"Nunito Sans\" }}\r\n                    gutterBottom\r\n                    variant=\"h5\"\r\n                    component=\"div\"\r\n                  >\r\n                    {hero.name}\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    style={{\r\n                      textAlign: \"justify\",\r\n                      fontFamily: \"Nunito Sans\",\r\n                      fontSize: \"16px\",\r\n                    }}\r\n                    color=\"text.secondary\"\r\n                  >\r\n                    {hero.description === \"\"\r\n                      ? altDescription\r\n                      : hero.description}\r\n                  </Typography>\r\n                  <ul\r\n                    style={{\r\n                      textAlign: \"left\",\r\n                      fontFamily: \"Nunito Sans\",\r\n                      fontSize: \"16px\",\r\n                    }}\r\n                  >\r\n                    <li style={{ textColor: \"dark-grey\" }}>\r\n                      Number of comics: {hero.comics.available}\r\n                    </li>\r\n                    <li>Number of series: {hero.series.available}</li>\r\n                    <li>Number of stories: {hero.stories.available}</li>\r\n                  </ul>\r\n                </CardContent>\r\n              </CardActionArea>\r\n              <CardActions>\r\n                <Button\r\n                  size=\"small\"\r\n                  href={hero.urls.filter(searchHeroComicLink)[0].url}\r\n                  style={{ color: \"#ff452b\", fontFamily: \"Nunito Sans\" }}\r\n                  target=\"_blank\"\r\n                >\r\n                  See comic info\r\n                </Button>\r\n                <Button\r\n                  size=\"small\"\r\n                  style={{ color: \"#ff452b\", fontFamily: \"Nunito Sans\" }}\r\n                  href={hero.urls.filter(searchHeroDetail)[0].url}\r\n                  target=\"_blank\"\r\n                >\r\n                  Learn More\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default HeroCard;\r\n","// Material UI imports\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport { useState } from \"react\";\r\n\r\n// Styles for search button\r\nconst btnStyles = {\r\n  marginLeft: \"10px\",\r\n  fontFamily: \"Nunito Sans\",\r\n  backgroundColor: \"#ff452b\",\r\n  marginTop: \"2px\",\r\n  height: \"55px\",\r\n};\r\n\r\nconst Search = (props) => {\r\n  // A state hook is used to store the input name given by the user\r\n  const [heroName, setHeroName] = useState(\"\");\r\n\r\n  const [option, setOption] = useState(\"More than 20 comics\");\r\n\r\n  let heroes = [...props.heroes];\r\n  let { setHeroes } = props;\r\n\r\n  // Default element to show when the search does not obtain any results\r\n  const emptySearch = [\r\n    {\r\n      name: \"No heroes found\",\r\n      description: \"Please try again\",\r\n      thumbnail: {\r\n        path: \"https://blogs.unsw.edu.au/nowideas/files/2018/11/error-no-es-fracaso\",\r\n        extension: \"jpg\",\r\n      },\r\n      urls: [\r\n        {\r\n          type: \"detail\",\r\n          url: \"https://blogs.unsw.edu.au/nowideas/files/2018/11/error-no-es-fracaso.jpg\",\r\n        },\r\n        {\r\n          type: \"comiclink\",\r\n          url: \"https://blogs.unsw.edu.au/nowideas/files/2018/11/error-no-es-fracaso.jpg\",\r\n        },\r\n      ],\r\n      comics: {\r\n        available: 0,\r\n      },\r\n      series: {\r\n        available: 0,\r\n      },\r\n      stories: {\r\n        available: 0,\r\n      },\r\n    },\r\n  ];\r\n\r\n  // Function to store the input name for the search\r\n  const handleChange = (event) => {\r\n    const newHeroName = event.target.value;\r\n    setHeroName(newHeroName);\r\n  };\r\n\r\n  // Function to search the hero using the input name given by the user\r\n  const filterByHeroName = (hero) => {\r\n    return hero.name === heroName;\r\n  };\r\n\r\n  // Function to handle behavior when the user clicks on the search button\r\n  const handleClick = () => {\r\n    if (heroName === \"\") {\r\n      setHeroes(emptySearch);\r\n    } else {\r\n      let heroesTemp = heroes.filter(filterByHeroName);\r\n      setHeroes(heroesTemp);\r\n    }\r\n  };\r\n\r\n  const handleFilterChange = (event) => {\r\n    let heroesTemp = heroes;\r\n    setOption(event.target.value);\r\n    if (option == \"More than 20 comics\") {\r\n      heroesTemp = heroes.filter(function f(element) {\r\n        return element.comics.available > 20;\r\n      });\r\n    }\r\n    if (option == \"Less than 10 series\") {\r\n      heroesTemp = heroes.filter(function f(element) {\r\n        return element.series.available < 10;\r\n      });\r\n    }\r\n    if (option == \"More than 8 stories\") {\r\n      heroesTemp = heroes.filter(function f(element) {\r\n        return element.stories.available > 8;\r\n      });\r\n    }\r\n    setHeroes(heroesTemp);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <TextField\r\n          id=\"filled-search\"\r\n          label=\"Search hero by name\"\r\n          type=\"search\"\r\n          style={{ fontFamily: \"Nunito Sans\" }}\r\n          variant=\"filled\"\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            handleClick();\r\n          }}\r\n          style={btnStyles}\r\n          startIcon={<SearchIcon />}\r\n        >\r\n          Search\r\n        </Button>\r\n      </div>\r\n      <br></br>\r\n      <div>\r\n        <FormControl>\r\n          <InputLabel\r\n            style={{ fontFamily: \"Nunito Sans\" }}\r\n            id=\"demo-simple-select-label\"\r\n          >\r\n            Filter\r\n          </InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={option}\r\n            style={{\r\n              marginLeft: \"10px\",\r\n              width: \"200px\",\r\n              fontFamily: \"Nunito Sans\",\r\n            }}\r\n            label=\"Filter\"\r\n            onChange={handleFilterChange}\r\n          >\r\n            <MenuItem value={\"More than 20 comics\"}>\r\n              More than 20 comics\r\n            </MenuItem>\r\n            <MenuItem value={\"Less than 10 series\"}>\r\n              Less than 10 series\r\n            </MenuItem>\r\n            <MenuItem value={\"More than 8 stories\"}>\r\n              More than 8 stories\r\n            </MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import \"./App.css\";\nimport HeroCard from \"./components/HeroCard\";\nimport Search from \"./components/Search\";\nimport { useState } from \"react\";\n\nfunction App() {\n  // A state hook is used to store all the heroes and send them as props to the other components\n  const [heroes, setHeroes] = useState([]);\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\"> MARVEL HEROES </h1>\n      <Search heroes={heroes} setHeroes={setHeroes} />\n      <br />\n      <HeroCard heroes={heroes} setHeroes={setHeroes} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}